INCLUDE(UsePkgConfig)
INCLUDE(CheckIncludeFileCXX)

# Include our custom cmake modules
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/CMake)

# Discover native tr1 support
CHECK_INCLUDE_FILE_CXX(tr1/array TR1)
IF(NOT TR1)
	MESSAGE("No native TR1 support found - Looking for Boost instead")
	FIND_PACKAGE(Boost REQUIRED)
ENDIF(NOT TR1)

FIND_PACKAGE(Qt4 REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)

# Fail if Qt doesn't have OpenGL support
IF (NOT QT_QTOPENGL_FOUND)
	MESSAGE(FATAL_ERROR "Qt OpenGL libraries were not found.")
ENDIF (NOT QT_QTOPENGL_FOUND)

# Find freetype
# Leopard's Freetype is crap. Require Fink version.
IF (NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	PKGCONFIG(freetype2 FREETYPE_INCLUDE_DIR FREETYPE_LIBRARIES FREETYPE_LINK_FLAGS FREETYPE_CFLAGS)
ENDIF (NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

# No freetype pkgconfig in Fink
IF (NOT FREETYPE_INCLUDE_DIR)
	FIND_PROGRAM(FREETYPECONFIG_EXECUTABLE NAMES freetype-config PATHS
		/usr/bin
		/usr/local/bin
		/opt/local/bin
		/sw/bin
		/sw/lib/freetype2/bin
	)
	SET(FREETYPE_LIBRARIES)
	SET(FREETYPE_INCLUDE_DIR)
	SET(FREETYPE_CFLAGS)

	IF(FREETYPECONFIG_EXECUTABLE)
		EXEC_PROGRAM(${FREETYPECONFIG_EXECUTABLE} ARGS --libs RETURN_VALUE _return_VALUE OUTPUT_VARIABLE FREETYPE_LIBRARIES)
		EXEC_PROGRAM(${FREETYPECONFIG_EXECUTABLE} ARGS --cflags RETURN_VALUE _return_VALUE OUTPUT_VARIABLE FREETYPE_CFLAGS)
		IF(FREETYPE_LIBRARIES AND FREETYPE_INCLUDE_DIR)
			SET(FREETYPE_FOUND TRUE)
		ENDIF(FREETYPE_LIBRARIES AND FREETYPE_INCLUDE_DIR)

		MARK_AS_ADVANCED(FREETYPE_LIBRARIES FREETYPE_INCLUDE_DIR)

	ELSE (FREETYPECONFIG_EXECUTABLE)
		MESSAGE(FATAL "Could not find freetype")
	ENDIF (FREETYPECONFIG_EXECUTABLE)
ENDIF (NOT FREETYPE_INCLUDE_DIR)

# Set up definitions and paths
ADD_DEFINITIONS(${QT_DEFINITIONS})
LINK_DIRECTORIES(${QT_LIBRARY_DIR} ${FREETYPE_LIBRARIES} ${Boost_LIBRARY_DIRS})
INCLUDE_DIRECTORIES(${QT_INCLUDES} ${FREETYPE_INCLUDE_DIR} ${Boost_INCLUDE_DIRS})

# Subdirectories
ADD_SUBDIRECTORY(ParticleLib)
ADD_SUBDIRECTORY(src)

# Uninstall support
CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
  "${CMAKE_COMMAND}" -P "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake")
